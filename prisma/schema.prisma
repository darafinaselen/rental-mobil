// Prisma schema for rental-mobil app
// Schema berdasarkan todo list backend

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Musim tarif dihapus (tidak digunakan)

// üöó Manajemen Armada (Mobil)
model Car {
    id             String   @id @default(uuid())
    slug           String?  @unique // SEO-friendly unique slug
    name           String   @default("Unnamed") // Nama mobil
    description    String? // Deskripsi
    startingPrice  Int      @default(0) // Harga mulai (dalam rupiah)
    capacity       Int      @default(4) // Kapasitas penumpang
    transmission   String   @default("Manual") // Transmisi (Manual/Automatic)
    fuelType       String   @default("Bensin") // Jenis bahan bakar
    available      Boolean  @default(true)
    features       String[] @default([]) // Fitur unggulan (array)
    specifications Json? // Spesifikasi lengkap
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt

    // Relations
    images        CarImage[]
    tariffItems   TariffItem[]
    featureBlocks CarFeature[]
}

// Galeri foto mobil
model CarImage {
    id        String   @id @default(uuid())
    carId     String
    imageUrl  String
    alt       String?
    order     Int      @default(0) // untuk urutan slider
    createdAt DateTime @default(now())

    car Car @relation(fields: [carId], references: [id], onDelete: Cascade)
}

// Fitur unggulan per mobil (dengan icon, title, description)
model CarFeature {
    id          String   @id @default(uuid())
    carId       String
    icon        String // nama icon atau URL
    title       String
    description String
    order       Int      @default(0)
    createdAt   DateTime @default(now())

    car Car @relation(fields: [carId], references: [id], onDelete: Cascade)

    @@index([carId])
    @@index([order])
}

// üéØ Manajemen Paket Tour (dihapus)

// ‚ùì Manajemen FAQ
model FAQ {
    id        String   @id @default(uuid())
    question  String // Pertanyaan
    answer    String // Jawaban
    order     Int      @default(0) // untuk urutan tampil
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// üìã Manajemen Syarat & Ketentuan
model TermsAndConditions {
    id        String   @id @default(uuid())
    category  String // Kategori (Umum, Sewa Mobil, Pembayaran, dll.)
    title     String // Judul poin syarat & ketentuan
    content   String // Isi detail syarat & ketentuan
    order     Int      @default(0) // untuk urutan tampil
    isActive  Boolean  @default(true) // status aktif/nonaktif
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([category])
    @@index([isActive])
}

// ü§ù Manajemen Mitra
model Partner {
    id        String   @id @default(uuid())
    name      String // Nama mitra
    logoUrl   String // File gambar logo
    order     Int      @default(0) // untuk urutan tampil
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

//  Tariff Penyewaan Umum (bukan per-mobil)
model TariffCategory {
    id          String   @id @default(uuid())
    name        String
    description String?
    order       Int      @default(0)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    items TariffItem[]

    @@index([order])
}

model TariffItem {
    id          String   @id @default(uuid())
    categoryId  String
    carId       String? // optional per-armada target
    name        String // contoh: "Dengan Driver", "Driver + BBM", "Tujuan Mataram"
    price       Int // dalam rupiah
    serviceType String? // e.g., "12-hour rental", "Airport transfer"
    packageType String? // e.g., "With Driver", "Driver + Fuel"
    order       Int      @default(0)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    category TariffCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
    car      Car?           @relation(fields: [carId], references: [id], onDelete: Cascade)

    @@index([categoryId])
    @@index([carId])
    @@index([order])
    @@index([serviceType])
    @@index([packageType])
}

// User untuk admin saja (saat ini)
model User {
    id                    String                 @id @default(uuid())
    email                 String                 @unique
    name                  String?
    role                  String                 @default("ADMIN") // ADMIN (saat ini hanya admin)
    // Hashed password for authentication (bcrypt hash)
    password              String                 @default("")
    createdAt             DateTime               @default(now())
    updatedAt             DateTime               @updatedAt
    // bookings  Booking[]
    passwordResetRequests PasswordResetRequest[]
}

// üîê Password Reset (OTP)
model PasswordResetRequest {
    id        String   @id @default(uuid())
    userId    String
    otp       String
    expiresAt DateTime
    verified  Boolean  @default(false)
    consumed  Boolean  @default(false)
    attempts  Int      @default(0)
    createdAt DateTime @default(now())

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
    @@index([expiresAt])
}
