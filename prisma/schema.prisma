// Prisma schema for rental-mobil app
// Schema berdasarkan todo list backend

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// üöó Manajemen Armada (Mobil)
model Car {
    id             String   @id @default(uuid())
    name           String   @default("Unnamed") // Nama mobil
    description    String? // Deskripsi
    startingPrice  Int      @default(0) // Harga mulai (dalam rupiah)
    capacity       Int      @default(4) // Kapasitas penumpang
    transmission   String   @default("Manual") // Transmisi (Manual/Automatic)
    fuelType       String   @default("Bensin") // Jenis bahan bakar
    available      Boolean  @default(true)
    features       String[] @default([]) // Fitur unggulan (array)
    specifications Json? // Spesifikasi lengkap
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt

    // Relations
    images  CarImage[]
    tariffs CarTariff[]
}

// Galeri foto mobil
model CarImage {
    id        String   @id @default(uuid())
    carId     String
    imageUrl  String
    alt       String?
    order     Int      @default(0) // untuk urutan slider
    createdAt DateTime @default(now())

    car Car @relation(fields: [carId], references: [id], onDelete: Cascade)
}

// Detail tarif mobil
model CarTariff {
    id          String   @id @default(uuid())
    carId       String
    name        String // Nama tarif (12 jam, antar-jemput, dll)
    price       Int // Harga dalam rupiah
    description String?
    createdAt   DateTime @default(now())

    car Car @relation(fields: [carId], references: [id], onDelete: Cascade)
}

// üéØ Manajemen Paket Tour
model TourPackage {
    id          String   @id @default(uuid())
    name        String // Nama paket
    description String // Deskripsi singkat
    imageUrl    String? // Gambar utama
    itinerary   Json? // Detail itinerary
    price       Int? // Harga dalam rupiah
    duration    String? // Durasi paket
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    // Relations
}

// ‚ùì Manajemen FAQ
model FAQ {
    id        String   @id @default(uuid())
    question  String // Pertanyaan
    answer    String // Jawaban
    order     Int      @default(0) // untuk urutan tampil
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// üìã Manajemen Syarat & Ketentuan
model TermsAndConditions {
    id        String   @id @default(uuid())
    category  String // Kategori (Umum, Sewa Mobil, Pembayaran, dll.)
    title     String // Judul poin syarat & ketentuan
    content   String // Isi detail syarat & ketentuan
    order     Int      @default(0) // untuk urutan tampil
    isActive  Boolean  @default(true) // status aktif/nonaktif
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([category])
    @@index([isActive])
}

// ü§ù Manajemen Mitra
model Partner {
    id        String   @id @default(uuid())
    name      String // Nama mitra
    logoUrl   String // File gambar logo
    order     Int      @default(0) // untuk urutan tampil
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Booking-related forms removed per requirements

// ContactMessage removed per requirements

// User untuk admin saja (saat ini)
model User {
    id        String   @id @default(uuid())
    email     String   @unique
    name      String?
    role      String   @default("ADMIN") // ADMIN (saat ini hanya admin)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    // bookings  Booking[]
}

// Booking record model removed per requirements
